version: "3"

services:
  my-app:
    image: cr.yandex/crp11e63ns0rgi2120do/myapp:latest
    platform: linux/amd64
    build:
      context: .
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://postgres:newPassword@postgres:5432/my-db-name
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
      env_file:
        .env
    ports:
      - "${PORT:-3000}:3000"
    restart: always
    networks:
      - awesome

  # postgres:
  #   image: postgres:13.2-alpine
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - ./postgresdata:/var/lib/postgresql/data
  #     - ./src/migrations/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
  #   restart: always
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER:-postgres}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-newPassword}
  #     POSTGRES_DB: ${POSTGRES_DB:-my-db-name}
  #     env_file:
  #       .env
  #   networks:
  #     - awesome

  # pgadmin:
  #   image: dpage/pgadmin4:4.18
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: secret
  #     PGADMIN_LISTEN_PORT: 80
  #   ports:
  #     - "8080:80"
  #   volumes:
  #     - pgadmin-data:/var/lib/pgadmin
  #   depends_on:
  #     - postgres
  #   networks:
  #     - awesome

volumes:
  pgadmin-data:

networks:
  awesome:
    driver: bridge
